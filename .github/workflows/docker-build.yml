name: Docker build

on:
  workflow_call:
    inputs:
      version:
        default: latest
        type: string
        required: false
    secrets:
      username:
        required: true
      token:
        required: true

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore Build Cache
        id: restore-build-cache
        uses: actions/cache/restore@v3
        with:
          path: ./dist
          key: ${{ runner.os }}-${{ github.sha }}-build

      - name: Fail on absent cache
        if: steps.restore-build-cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=microlc/middleware
          VERSION=$(echo ${{ inputs.version }} | sed s/^v//)
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          pull: true
          push: true
          cache-from: type=registry,ref=${{ steps.prepare.outputs.image }}:${{ inputs.version }}
          cache-to: type=inline
          tags: ${{ steps.prepare.outputs.tags }}
